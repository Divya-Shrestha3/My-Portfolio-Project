CREATE DATABASE WALMARTSALES;
USE WALMARTSALES;
CREATE TABLE SALES(
INVOICE_ID VARCHAR(30) NOT NULL PRIMARY KEY,
BRANCH VARCHAR(5) NOT NULL,
CITY VARCHAR(30) NOT NULL,
CUSTOMER_TYPE VARCHAR(30) NOT NULL,
GENDER VARCHAR(10) NOT NULL,
PRODUCT_LINE VARCHAR(100) NOT NULL,
UNIT_PRICE DECIMAL(10,2) NOT NULL,
QUANTITY INT NOT NULL,
VAT FLOAT(6,4) NOT NULL,
TOTAL DECIMAL(12,5) NOT NULL,
DATE DATETIME NOT NULL,
TIME time NOT NULL,
PAYMENT VARCHAR(30) NOT NULL,
COGS DECIMAL(10,2) NOT NULL,
GROSS_MARGIN FLOAT(10,9) NOT NULL,
GROSS_INCOME DECIMAL (12,4) NOT NULL,
RATING FLOAT(2,1) NOT NULL
);

SELECT * FROM SALES;

/*Feature engineer time of the day*/

SELECT TIME FROM SALES;

SELECT TIME,
(CASE 
WHEN TIME > "00:00:00" AND TIME < "12:00:00" THEN "MORNING"
WHEN TIME > "12:01:00" AND TIME < "16:00:00" THEN "AFTERNOON"
ELSE "EVENING"
END
) As Time_Of_Day
FROM SALES;

ALTER TABLE SALES ADD TIME_OF_DAY VARCHAR (20);

UPDATE SALES
SET TIME_OF_DAY=
(
CASE 
WHEN TIME > "00:00:00" AND TIME < "12:00:00" THEN "MORNING"
WHEN TIME > "12:01:00" AND TIME < "16:00:00" THEN "AFTERNOON"
ELSE "EVENING"
END
);

SELECT * FROM SALES;

/*DAY_NAME*/
SELECT 
DATE,
DAYNAME(DATE),
MONTHNAME(DATE)
FROM SALES;

ALTER TABLE SALES ADD DAY_NAME VARCHAR(20),ADD MONTH_NAME VARCHAR(20);

UPDATE SALES
SET 
DAY_NAME=(DAYNAME(DATE))
;
UPDATE SALES
SET 
MONTH_NAME=(MONTHNAME(DATE))
;
/*Unique cities*/

SELECT DISTINCT(CITY)
FROM SALES;

/*IN WHICH CITY IS EACH BRANCH*/
SELECT BRANCH,CITY
FROM SALES
GROUP BY BRANCH,CITY;

/*unique product lines */
SELECT
COUNT(DISTINCT(PRODUCT_LINE))
FROM SALES;

/*Most common payment method*/
SELECT * FROM SALES;
SELECT PAYMENT, COUNT(PAYMENT) As Cnt
FROM SALES
GROUP BY PAYMENT
ORDER BY CNT DESC;

/*Most selling product line*/
SELECT PRODUCT_LINE, COUNT(PRODUCT_LINE) As Cnt
FROM SALES
GROUP BY PRODUCT_LINE
ORDER BY CNT DESC;

/*Total revenue by month*/
SELECT MONTH_NAME, SUM(TOTAL) As TOTALREVENUE
FROM SALES
GROUP BY MONTH_NAME;

/*What month had the largest COGS*/
SELECT MONTH_NAME, SUM(COGS) As MAX_COGS
FROM SALES
GROUP BY MONTH_NAME
ORDER BY MAX_COGS DESC;

/*What product line had the largest revenue*/
SELECT PRODUCT_LINE, SUM(TOTAL) As TOTAL_REVENUE
FROM SALES
GROUP BY PRODUCT_LINE
ORDER BY TOTAL_REVENUE DESC;

/*city with largest revenue*/
SELECT * FROM SALES;
SELECT CITY, SUM(TOTAL) As TOTAL_REVENUE
FROM SALES
GROUP BY CITY
ORDER BY TOTAL_REVENUE DESC;

/*What product line had the largest VAT*/
SELECT PRODUCT_LINE, AVG(VAT) As AVG_VAT
FROM SALES
GROUP BY PRODUCT_LINE
ORDER BY AVG_VAT DESC;

SELECT * FROM SALES;
SELECT AVG(TOTAL) FROM SALES;

/*If revenue greater than average good otherwise bad*/
SELECT PRODUCT_LINE, SUM(TOTAL) As SUM,
(CASE
	WHEN SUM(TOTAL) > AVG(TOTAL) THEN "GOOD"
    ELSE "BAD"
END) As Sales
FROM SALES
GROUP BY PRODUCT_LINE
;

/*Which branch sold more products than average product sold*/
SELECT BRANCH,SUM(QUANTITY) AS QTY
FROM SALES
GROUP BY BRANCH
HAVING SUM(QUANTITY) > (SELECT AVG(QUANTITY) FROM SALES)
;

/*Common product line by gender*/
SELECT GENDER,PRODUCT_LINE,COUNT(GENDER) AS TOTAL_CNT
FROM SALES
GROUP BY GENDER,PRODUCT_LINE
;
/*Average rating of each product*/
SELECT PRODUCT_LINE,AVG(RATING)
FROM SALES
GROUP BY PRODUCT_LINE;

/*Number of sales made in each time of the day per weekday*/
SELECT TIME_OF_DAY,COUNT(TOTAL)
FROM SALES
WHERE DAY_NAME = "MONDAY"
GROUP BY TIME_OF_DAY
;

/*Which customer types bring more revenue*/
SELECT CUSTOMER_TYPE,SUM(TOTAL)
FROM SALES
GROUP BY CUSTOMER_TYPE
;

/*Which city has the largest tax  percent/VAT*/
SELECT CITY,
AVG(VAT) AS VAT
FROM SALES
GROUP BY CITY
ORDER BY VAT DESC;

/*Which customer type pays the most in VAT*/
SELECT CUSTOMER_TYPE, AVG(VAT)
FROM SALES
GROUP BY CUSTOMER_TYPE
ORDER BY AVG(VAT) DESC;

/*unique customer type*/
SELECT CUSTOMER_TYPE
FROM SALES
GROUP BY CUSTOMER_TYPE
;

